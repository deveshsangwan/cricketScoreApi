"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.matchStatsResponseSchema = exports.runRateDataSchema = exports.playerDataSchema = exports.iTeamDataSchema = exports.iPreviousInningsSchema = exports.liveMatchesResponseSchema = exports.matchStatsParamsSchema = void 0;
// Generated by ts-to-zod
const zod_1 = require("zod");
const matchIdSchema = zod_1.z.string().regex(/^[a-zA-Z0-9]{16}$/);
exports.matchStatsParamsSchema = zod_1.z.object({
    matchId: matchIdSchema,
});
exports.liveMatchesResponseSchema = zod_1.z.object({
    matchUrl: zod_1.z.string().optional(),
    matchName: zod_1.z.string().optional(),
    matchId: matchIdSchema.optional(),
});
exports.iPreviousInningsSchema = zod_1.z.object({
    score: zod_1.z.string(),
    wickets: zod_1.z.string(),
});
exports.iTeamDataSchema = zod_1.z.object({
    isBatting: zod_1.z.boolean(),
    name: zod_1.z.string(),
    score: zod_1.z.string(),
    overs: zod_1.z.string().optional(),
    wickets: zod_1.z.string(),
    previousInnings: exports.iPreviousInningsSchema.optional(),
});
exports.playerDataSchema = zod_1.z.object({
    name: zod_1.z.string(),
    runs: zod_1.z.string(),
    balls: zod_1.z.string(),
});
exports.runRateDataSchema = zod_1.z.object({
    currentRunRate: zod_1.z.string(),
    requiredRunRate: zod_1.z.string(),
});
exports.matchStatsResponseSchema = zod_1.z.object({
    matchId: matchIdSchema,
    isLive: zod_1.z.boolean().optional(),
    team1: exports.iTeamDataSchema,
    team2: exports.iTeamDataSchema,
    onBatting: zod_1.z.object({
        player1: exports.playerDataSchema,
        player2: exports.playerDataSchema,
    }),
    summary: zod_1.z.string(),
    tournamentName: zod_1.z.string().optional(),
    matchName: zod_1.z.string().optional(),
});
//# sourceMappingURL=matchStats.zod.js.map