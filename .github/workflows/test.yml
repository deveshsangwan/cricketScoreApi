name: Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OPTIMIZE_API_KEY: ${{ secrets.OPTIMIZE_API_KEY }}

      - name: Run Build
        run: pnpm run build

      - name: Run Tests
        run: |
          echo "Running tests with NODE_ENV=$NODE_ENV"
          echo "Prisma version: $(pnpm prisma -v)"
          NODE_ENV=test pnpm run test:coverage --verbose
        env:
          NODE_ENV: test
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          OPTIMIZE_API_KEY: ${{ secrets.OPTIMIZE_API_KEY }}

      # - name: Commit coverage badge
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git add README.md
      #     git commit -m "Update coverage badge" -a
      #     git push